plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
}
// Unsplash API access key
def UNSPLASH_ACCESS_KEY = "\"UwbV7gVzSPFsjrDRUIohdy2GykPCX-LZITz6AQ9aBjo\""
def BASE_URL = "\"https://api.unsplash.com/\""

android {
    compileSdk project.compileSdkVersion

    defaultConfig {
        applicationId "com.plung.imagesearchapp"
        minSdk project.minSdkVersion
        targetSdk project.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "UNSPLASH_ACCESS_KEY", UNSPLASH_ACCESS_KEY)
        buildConfigField("String", "BASE_URL", BASE_URL)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {

    // Default dependencies
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation 'com.google.android.material:material:1.5.0'

    // Unit Testing dependencies
    testImplementation "junit:junit:$junitVersion"
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'
    testImplementation 'org.mockito:mockito-inline:4.2.0'

    //Instrument testing dependencies
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'

    //LifeCycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:1.4.0"

    // Retrofit + GSON
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhtto_log_intercepter"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // hilt testing
    // For unit, and instrumented tests.
    testImplementation("com.google.dagger:hilt-android-testing:$hiltVersion")
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hiltVersion")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hiltVersion")
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}